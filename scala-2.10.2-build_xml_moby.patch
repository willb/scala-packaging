diff --git a/build.xml b/build.xml
index f12b4e8..aad5aaa 100644
--- a/build.xml
+++ b/build.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
-<project name="sabbus" default="build" xmlns:artifact="urn:maven-artifact-ant">
+<project name="sabbus" default="build">
   <description>
 SuperSabbus for Scala core, builds the scala library and compiler. It can also package it as a simple distribution, tests it for stable bootstrapping and against the Scala test suite.
   </description>
@@ -95,8 +95,6 @@ TODO:
 
   <property environment="env"/>
   <!-- Prevents system classpath from being used -->
-  <property name="build.sysclasspath"     value="ignore"/>
-
   <!-- Defines the repository layout -->
   <property name="docs.dir"               value="${basedir}/docs"/>
   <property name="lib.dir"                value="${basedir}/lib"/>
@@ -122,8 +120,8 @@ TODO:
   <property name="reflect.starr.jar"       value="${lib.dir}/scala-reflect.jar"/>
   <property name="compiler.starr.jar"      value="${lib.dir}/scala-compiler.jar"/>
   <property name="msil.starr.jar"          value="${lib.dir}/msil.jar"/>
-  <property name="jline.jar"               value="${lib.dir}/jline.jar"/>
-  <property name="ant.jar"                 value="${ant.home}/lib/ant.jar"/>
+  <property name="jline.jar"               value="/usr/share/java/jline2.jar"/>
+  <property name="ant.jar"                 value="/usr/share/java/ant.jar"/>
   <property name="scalacheck.jar"          value="${lib.dir}/scalacheck.jar"/>
 
   <!-- Sets location of build folders -->
@@ -178,76 +176,13 @@ TODO:
 
   <target name="boot" depends="desired.jars.uptodate" unless="lib.jars.uptodate">
     <echo level="warn" message="Updating bootstrap libs.  (To do this by hand, run ./pull-binary-libs.sh)"/>
-    <exec osfamily="unix" vmlauncher="false" executable="./pull-binary-libs.sh" failifexecutionfails="true" />
-    <exec osfamily="windows" vmlauncher="false" executable="pull-binary-libs.sh" failifexecutionfails="true" />
     <!-- uptodate task needs to know these are what's in the sha. -->
-    <touch>
-      <fileset dir="${basedir}"><patternset refid="desired.jars"/></fileset>
-      <mapper type="glob" from="*.desired.sha1" to="*"/>
-    </touch>
   </target>
 
   <target name="init" depends="boot">
-    <!-- Set up Ant contrib tasks so we can use <if><then><else> instead of the clunky `unless` attribute -->
-    <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${lib-ant.dir}/ant-contrib.jar"/>
-
-    <!-- Add our maven ant tasks -->
-    <path id="maven-ant-tasks.classpath" path="${lib-ant.dir}/maven-ant-tasks-2.1.1.jar" />
-    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />
-
-    <!-- Resolve maven dependencies -->
+    <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="/usr/share/java/ant/ant-contrib.jar"/>
 
-    <!-- work around http://jira.codehaus.org/browse/MANTTASKS-203:
-         java.lang.ClassCastException: org.codehaus.plexus.DefaultPlexusContainer cannot be cast to org.codehaus.plexus.PlexusContainer
-         on repeated use of artifact:dependencies
-    -->
     <if><not><isset property="maven-deps-done"></isset></not><then>
-      <mkdir dir="${user.home}/.m2/repository"/>
-      <!-- This task has an issue where if the user directory does not exist, so we create it above. UGH. -->
-      <artifact:dependencies pathId="extra.tasks.classpath" filesetId="extra.tasks.fileset">
-        <dependency groupId="biz.aQute" artifactId="bnd" version="1.50.0"/>
-      </artifact:dependencies>
-
-      <!-- Pax runner -->
-      <property name="pax.exam.version" value="2.5.0"/>
-      <artifact:dependencies pathId="pax.exam.classpath" filesetId="pax.exam.fileset">
-        <dependency groupId="org.ops4j.pax.exam" artifactId="pax-exam-container-native" version="${pax.exam.version}"/>
-        <dependency groupId="org.ops4j.pax.exam" artifactId="pax-exam-junit4" version="${pax.exam.version}"/>
-        <dependency groupId="org.ops4j.pax.exam" artifactId="pax-exam-link-assembly" version="${pax.exam.version}"/>
-        <dependency groupId="org.ops4j.pax.url" artifactId="pax-url-aether" version="1.4.0"/>
-        <dependency groupId="org.ops4j.pax.swissbox" artifactId="pax-swissbox-framework" version="1.5.1"/>
-        <dependency groupId="ch.qos.logback" artifactId="logback-core" version="0.9.20"/>
-        <dependency groupId="ch.qos.logback" artifactId="logback-classic" version="0.9.20"/>
-        <dependency groupId="junit" artifactId="junit" version="4.10"/>
-        <dependency groupId="org.apache.felix" artifactId="org.apache.felix.framework" version="3.2.2"/>
-      </artifact:dependencies>
-
-      <artifact:dependencies pathId="partest.extras.classpath" filesetId="partest.extras.fileset" versionsId="partest.extras.versions">
-        <dependency groupId="com.googlecode.java-diff-utils" artifactId="diffutils" version="1.3.0"/>
-      </artifact:dependencies>
-
-      <!-- BND support -->
-      <typedef resource="aQute/bnd/ant/taskdef.properties" classpathref="extra.tasks.classpath" />
-
-      <!-- Download STARR via maven if `starr.use.released` is set,
-           and `starr.version` is specified (see the starr.number properties file).
-           Want to slow down STARR changes, using only released versions. -->
-      <if><isset property="starr.use.released"/><then>
-        <echo message="Using Scala ${starr.version} for STARR."/>
-        <artifact:dependencies pathId="starr.core.path">
-          <dependency groupId="org.scala-lang" artifactId="scala-library" version="${starr.version}"/>
-          <dependency groupId="org.scala-lang" artifactId="scala-reflect" version="${starr.version}"/>
-          <dependency groupId="org.scala-lang" artifactId="scala-compiler" version="${starr.version}"/>
-        </artifact:dependencies></then>
-      <else>
-        <path id="starr.core.path">
-          <pathelement location="${library.starr.jar}"/>
-          <pathelement location="${reflect.starr.jar}"/>
-          <pathelement location="${compiler.starr.jar}"/>
-          <pathelement location="${msil.starr.jar}"/>
-        </path></else>
-      </if>
-
       <property name="maven-deps-done"     value="yep!"/>
     </then></if>
 
@@ -439,6 +374,13 @@ TODO:
 
       There must be a variable of the shape @{stage}.compiler.path  for all @{stage} in starr, locker, quick, strap.
     -->
+    <path id="starr.core.path">
+      <pathelement location="${library.starr.jar}"/>
+      <pathelement location="${reflect.starr.jar}"/>
+      <pathelement location="${compiler.starr.jar}"/>
+      <pathelement location="${msil.starr.jar}"/>
+    </path>
+
     <path id="starr.compiler.path">
       <path refid="starr.core.path"/>
       <pathelement location="${lib.dir}/forkjoin.jar"/>
@@ -732,7 +674,7 @@ TODO:
       <include name="**/*.txt"/>
     </patternset>
 
-    <taskdef resource="scala/tools/ant/sabbus/antlib.xml" classpathref="starr.compiler.path"/>
+    <taskdef resource="scala/tools/ant/sabbus/antlib.xml" classpathref="starr.compiler.path"/> 
   </target>
 
 <!-- ===========================================================================
@@ -778,7 +720,8 @@ TODO:
           classpath="${@{project}-classes}"
           includes="**/*.java"
           target="1.6" source="1.5"
-          compiler="javac1.6">
+          compiler="javac1.6"
+	  includeantruntime="false" >
             <compilerarg line="${javac.args} @{args}"/>
         </javac>
         <if><equals arg1="@{jar}" arg2="yes"/><then>
@@ -1153,7 +1096,7 @@ TODO:
   <target name="quick.partest"    depends="quick.scalap, quick.comp, asm.done">
     <staged-build with="locker"   stage="quick" project="partest" version="partest"/> </target>
 
-  <target name="quick.swing"      depends="quick.actors, quick.lib" if="has.java6">
+  <target name="quick.swing"      depends="quick.actors, quick.lib">
     <staged-build with="locker"   stage="quick" project="swing"/> </target>
 
   <target name="quick.plugins"    depends="quick.comp">
@@ -1204,7 +1147,7 @@ TODO:
     <staged-pack project="library"/></target>
 
   <target name="pack.actors"  depends="quick.lib">                <staged-pack project="actors"/> </target>
-  <target name="pack.swing" if="has.java6" depends="quick.swing"> <staged-pack project="swing"/> </target>
+  <target name="pack.swing" depends="quick.swing"> <staged-pack project="swing"/> </target>
   <target name="pack.reflect" depends="quick.reflect">            <staged-pack project="reflect"/> </target>
 
   <target name="pack.comp"    depends="quick.comp, asm.done">
@@ -1351,10 +1294,8 @@ TODO:
       <make-plugin-bundle name="continuations" version="${osgi.version.number}" />
       <touch file="${build-osgi.dir}/bundles.complete" verbose="no"/>
 
-      <if><isset property="has.java6"/><then>
-        <make-bundle name="scala-swing" version="${osgi.version.number}"/></then>
-      </if>
-      <stopwatch name="osgi.bundle.timer" action="total"/></then>
+      <make-bundle name="scala-swing" version="${osgi.version.number}"/></then>
+      <stopwatch name="osgi.bundle.timer" action="total"/>
     </if>
   </target>
 
@@ -1530,63 +1471,19 @@ TODO:
     <!-- Obtain mima -->
     <mkdir dir="${bc-build.dir}"/>
     <!-- Pull down MIMA -->
-    <artifact:dependencies pathId="mima.classpath">
-      <dependency groupId="com.typesafe" artifactId="mima-reporter_2.9.2" version="0.1.5"/>
-    </artifact:dependencies>
-    <artifact:dependencies pathId="old.bc.classpath">
-      <dependency groupId="org.scala-lang" artifactId="scala-swing" version="${bc-reference-version}"/>
-      <dependency groupId="org.scala-lang" artifactId="scala-library" version="${bc-reference-version}"/>
-      <dependency groupId="org.scala-lang" artifactId="scala-reflect" version="${bc-reference-version}"/>
-    </artifact:dependencies>
     <property name="maven-deps-done-mima" value="true"/>
   </target>
 
   <macrodef name="bc.run-mima">
-    <attribute name="jar-name"/>
-    <attribute name="prev"/>
-    <attribute name="curr"/>
-    <attribute name="direction"/>
-    <sequential>
-      <echo message="Checking @{direction} binary compatibility for @{jar-name} (against ${bc-reference-version})"/>
-      <java taskname="mima"
-         fork="true"
-         failonerror="true"
-         classname="com.typesafe.tools.mima.cli.Main">
-           <arg value="--prev"/>
-           <arg value="@{prev}"/>
-           <arg value="--curr"/>
-           <arg value="@{curr}"/>
-           <arg value="--filters"/>
-           <arg value="${basedir}/bincompat-@{direction}.whitelist.conf"/>
-           <arg value="--generate-filters"/>
-           <classpath>
-             <path refid="mima.classpath"/>
-           </classpath>
-      </java>
-    </sequential>
+    <sequential></sequential>
   </macrodef>
 
   <macrodef name="bc.check">
-    <attribute name="jar-name"/>
-    <sequential>
-        <bc.run-mima
-                jar-name="@{jar-name}"
-                prev="${org.scala-lang:@{jar-name}:jar}"
-                curr="${build-pack.dir}/lib/@{jar-name}.jar"
-                direction="backward"/>
-        <bc.run-mima
-                jar-name="@{jar-name}"
-                prev="${build-pack.dir}/lib/@{jar-name}.jar"
-                curr="${org.scala-lang:@{jar-name}:jar}"
-                direction="forward"/>
-    </sequential>
+    <sequential></sequential>
   </macrodef>
 
   <target name="test.bc-opt" description="Optimized version of test.bc."> <optimized name="test.bc"/></target>
   <target name="test.bc" depends="bc.init, pack.lib, pack.reflect, pack.swing">
-    <bc.check jar-name="scala-library"/>
-    <bc.check jar-name="scala-reflect"/>
-    <bc.check jar-name="scala-swing"/>
   </target>
 
 <!-- ===========================================================================
@@ -1762,7 +1659,6 @@ TODO:
     <mkdir dir="${dist.dir}/lib"/>
     <copy toDir="${dist.dir}/lib">
       <fileset dir="${build-pack.dir}/lib">
-        <include name="jline.jar"/>
         <include name="scalacheck.jar"/>
         <include name="scala-partest.jar"/>
         <include name="scalap.jar"/>
